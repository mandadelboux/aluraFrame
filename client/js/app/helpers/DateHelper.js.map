{"version":3,"sources":["../../app-es6/helpers/DateHelper.js"],"names":["DateHelper","Error","data","getDate","getMonth","getFullYear","texto","test","Date","split","map","item","indice"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAAaA,U;AAET,sCAAa;AAAA;;AACT,0BAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AAEH;;AAED;AACA;;AAEA;;;;kDAEsBC,I,EAAM;AACxB,+BAAUA,KAAKC,OAAL,EAAV,UAA4BD,KAAKE,QAAL,KAAkB,CAA9C,UAAmDF,KAAKG,WAAL,EAAnD,CADwB,CACgD;AAE3E;;;kDAEoBC,K,EAAO;AACxB;AACA,4BAAI,CAAC,oBAAoBC,IAApB,CAAyBD,KAAzB,CAAL,EAAsC,MAAM,IAAIL,KAAJ,CAAU,iCAAV,CAAN;;AAEtC,kEAAWO,IAAX,mCAAmBF,MAAMG,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,CAAqB,UAACC,IAAD,EAAOC,MAAP;AAAA,mCAAkBD,OAAOC,SAAS,CAAlC;AAAA,yBAArB,CAAnB;AACH","file":"DateHelper.js","sourcesContent":["export class DateHelper {\r\n\r\n    constructor(){\r\n        throw new Error(\"DateHelper não pode ser instanciada!\");\r\n        \r\n    }\r\n\r\n    //let data = new Date(this._inputData.value.split(\"-\")); Os dois convertem uma string em Date\r\n    //let data = new Date(this._inputData.value.replace(/-/g,','));\r\n\r\n    // => arrow function que retorna o valor e não precisa de bloco\r\n\r\n     static dataParaTexto(data) {\r\n        return `${data.getDate()}/${data.getMonth() + 1}/${data.getFullYear()}`;//Template string ` `\r\n\r\n    }\r\n\r\n    static textoParaData(texto) {\r\n        //Expressão regular - Caso texto não esteja no formato mostrar um erro\r\n        if (!/\\d{4}-\\d{2}-\\d{2}/.test(texto)) throw new Error(\"Deve estar no padrão aaaa-mm-dd\");\r\n        \r\n        return new Date(...texto.split('-').map((item, indice) => item - indice % 2));\r\n    }\r\n\r\n}\r\n"]}