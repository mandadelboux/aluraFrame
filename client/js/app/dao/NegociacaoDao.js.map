{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAAQA,sB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;qCAEKC,a;AACT,uCAAYC,UAAZ,EAAwB;AAAA;;AAEpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AAEH;;;;6CAEQC,U,EAAY;AAAA;;AACjB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEtC,gCAAIC,UAAU,MAAKN,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,MAAKN,MAAN,CAA7B,EAA4C,WAA5C,EAAyDO,WAAzD,CAAqE,MAAKP,MAA1E,EACbQ,GADa,CACTP,UADS,CAAd;;AAGEI,oCAAQI,SAAR,GAAqB,aAAK;AACtBN;AACH,6BAFD;;AAIAE,oCAAQK,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,yCAAP;AACH,6BAHD;AAIH,yBAbM,CAAP;AAcH;;;iDAEW;AAAA;;AACR,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIY,SAAS,OAAKjB,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,OAAKN,MAAN,CAA7B,EAA2C,WAA3C,EACZO,WADY,CACA,OAAKP,MADL,EACaiB,UADb,EAAb;;AAGA,gCAAIC,cAAc,EAAlB;;AAEAF,mCAAOP,SAAP,GAAmB,aAAK;AACrB,oCAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;;AAEC,oCAAGD,KAAH,EAAS;AACL,wCAAIE,OAAOF,MAAMG,KAAjB;;AAEAJ,gDAAYK,IAAZ,CAAiB,IAAI3B,UAAJ,CAAeyB,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CAAjB;AACAP,0CAAMQ,QAAN;AACH,iCALD,MAKK;AACDxB,4CAAQe,WAAR;AACH;AACJ,6BAXD;;AAaAF,mCAAON,OAAP,GAAiB,aAAK;AAClBC,wCAAQC,GAAR,CAAY,WAAWC,EAAEC,MAAF,CAASC,KAAhC;AACAX,uCAAO,wCAAP;AACH,6BAHD;AAIH,yBAxBM,CAAP;AAyBH;;;iDAEW;AAAA;;AACR,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;;AAEnC,gCAAIC,UAAU,OAAKN,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,OAAKN,MAAN,CAA7B,EAA2C,WAA3C,EACbO,WADa,CACD,OAAKP,MADJ,EACY4B,KADZ,EAAd;;AAGAvB,oCAAQI,SAAR,GAAoB;AAAA,uCAAKN,QAAQ,mCAAR,CAAL;AAAA,6BAApB;;AAEAE,oCAAQK,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,wCAAP;AACH,6BAHD;AAIH,yBAXM,CAAP;AAYH","file":"NegociacaoDao.js","sourcesContent":["import {Negociacao} from '../models/Negociacao' \r\n\r\nexport class NegociacaoDao {\r\n    constructor(connection) {\r\n\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n\r\n    }\r\n\r\n    adiciona(negociacao) {\r\n        return new Promise((resolve, reject) => {\r\n           \r\n          let request = this._connection.transaction([this._store], 'readwrite').objectStore(this._store)\r\n          .add(negociacao)\r\n\r\n            request.onsuccess =  e => {\r\n                resolve();\r\n            }\r\n            \r\n            request.onerror = e => {\r\n                console.log(e.target.error)\r\n                reject(\"Não foi possível adicionar a negociação\")\r\n            }\r\n        })\r\n    }\r\n\r\n    listaTodos(){\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let cursor = this._connection.transaction([this._store],'readwrite')\r\n            .objectStore(this._store).openCursor()\r\n\r\n            let negociacoes = []\r\n\r\n            cursor.onsuccess = e => {\r\n               let atual = e.target.result;\r\n                \r\n                if(atual){\r\n                    let dado = atual.value;\r\n\r\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n                    atual.continue();\r\n                }else{\r\n                    resolve(negociacoes);\r\n                }\r\n            }\r\n\r\n            cursor.onerror = e => {\r\n                console.log('Error:' + e.target.error);\r\n                reject(\"Não foi possível listar as negociações\")\r\n            }\r\n        })\r\n    }\r\n\r\n    apagaTodos(){\r\n        return new Promise((resolve, reject) =>{\r\n\r\n            let request = this._connection.transaction([this._store],'readwrite')\r\n            .objectStore(this._store).clear()\r\n\r\n            request.onsuccess = e => resolve(\"Negociações apagadas com sucesso!\") \r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error)\r\n                reject(\"Não foi possível apagar as negociações\")\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n}\r\n"]}